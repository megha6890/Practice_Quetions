vector<long long> printFirstNegativeInteger(long long int A[],
                                             long long int N, long long int K) {
              deque<long long int>dq;
              vector<long long>ans;
              
              //for first window of k size
              for(int i=0;i<K;i++){
                  if(A[i]<0){
                      dq.push_back(i);
                  }
              }
              if(dq.size()>0){
                  ans.push_back(A[dq.front()]);
              }
              else{
                  ans.push_back(0);
              }
              
              //process for remaining windows
              for(int i=K;i<N;i++){
                  
                  //removal of prev ele
                  if(!dq.empty() && i-dq.front()>=K){
                      dq.pop_front();
                  }
                  
                  //addition of new ele
                  if(A[i]<0){
                      dq.push_back(i);
                  }
                   
                  //ans store
                  if(dq.size()>0){
                      ans.push_back(A[dq.front()]);
                  }
                  else{
                      ans.push_back(0);
                  }
                  
              }
              return ans;
              
              
 }
